// <auto-generated />
using System;
using LogisticaAngular.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogisticaAngular.Migrations
{
    [DbContext(typeof(LogisticaDbContext))]
    [Migration("20201209001128_AgregoAutenticacion2")]
    partial class AgregoAutenticacion2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogisticaAngular.Models.Camion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Traccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transmision")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("camiones");
                });

            modelBuilder.Entity("LogisticaAngular.Models.CamionCamionero", b =>
                {
                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<int>("CamioneroId")
                        .HasColumnType("int");

                    b.HasKey("CamionId", "CamioneroId");

                    b.HasIndex("CamioneroId");

                    b.ToTable("CamionCamioneros");
                });

            modelBuilder.Entity("LogisticaAngular.Models.Camionero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salario")
                        .HasColumnType("float");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("camioneros");
                });

            modelBuilder.Entity("LogisticaAngular.Models.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CamioneroId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destinatario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDestinatario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CamioneroId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("LogisticaAngular.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("LogisticaAngular.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogisticaAngular.Models.CamionCamionero", b =>
                {
                    b.HasOne("LogisticaAngular.Models.Camion", "Camion")
                        .WithMany("CamionCamioneros")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticaAngular.Models.Camionero", "Camionero")
                        .WithMany("CamionCamioneros")
                        .HasForeignKey("CamioneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogisticaAngular.Models.Paquete", b =>
                {
                    b.HasOne("LogisticaAngular.Models.Camionero", "Camionero")
                        .WithMany("Paquetes")
                        .HasForeignKey("CamioneroId");

                    b.HasOne("LogisticaAngular.Models.Provincia", "Provincia")
                        .WithMany("Paquetes")
                        .HasForeignKey("ProvinciaId");
                });
#pragma warning restore 612, 618
        }
    }
}
